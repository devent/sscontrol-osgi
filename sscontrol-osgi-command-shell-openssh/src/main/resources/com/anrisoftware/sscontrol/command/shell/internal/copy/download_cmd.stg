downloadCmd(args) ::= <<
SRC_NAME=$(basename <args.src>)
DEST_FILE="<args.dest>"

function checkHashFile() {
    <if(args.hash)><checkHashFile(args)><else>true<endif>
}

function checkSigFile() {
    <if(args.sig)><checkSigFile(args)><else>true<endif>
}

function downloadCheckFile() {
    <setupRemoteTmp(args)>
    cd '<args.remoteTmp>'
    downloadFile
    <if(args.hash)>checkHashFile<endif>
    <if(args.sig)>checkSigFile<endif>
    ret=$?
    if [[ $ret != 0 ]]; then
        exit $ret
    fi
    <copyFile(args)>
}

function downloadFile() {
    <downloadFile(args, "$SRC_NAME", args.src)>
}

if [ -d "<args.dest>" ]; then
    DEST_FILE="<args.dest>/$SRC_NAME"
fi
if [ -f "$DEST_FILE" ]; then
    cd "`dirname $DEST_FILE`"
    <if(args.hash)>checkHashFile<endif>
    <if(args.sig)>checkSigFile<endif>
    if [[ $? != 0 ]]; then
        downloadCheckFile
        exit $?
    fi
else
    downloadCheckFile
    exit $?
fi
>>

setupRemoteTmp(args) ::= <<
sudo mkdir -p '<args.remoteTmp>'
sudo chown $SSH_USER '<args.remoteTmp>'
sudo chmod o-rwx '<args.remoteTmp>'
>>

downloadFile(args, name, src) ::= <<
if which wget >/dev/null; then
    <wgetCmd(args, name, src)>
elif which curl >/dev/null; then
    <curlCmd(args, name, src)>
fi
>>

copyFile(args) ::= <<
cd '<args.remoteTmp>'
<if(args.withSudo)>
sudo mv "$SRC_NAME" "<args.dest>"
<else>
mv "$SRC_NAME" "<args.dest>"
<endif>
>>

checkHashFile(args) ::= <<
<(args.hashType)(args)>
>>

checkSigFile(args) ::= <<
SIG_NAME=$(basename <args.sig>)
<if(args.sigRemote)><downloadFile(args, "$SIG_NAME", args.sig)><endif>
gpg --keyserver <args.server> --recv-key <args.key>
gpg --verify "$SIG_NAME"
ret=$?
rm "$SIG_NAME"
return $ret
>>

md5(args) ::= <<
if ! echo "<args.hash> $SRC_NAME" | md5sum -c - >/dev/null; then
return 1
fi
>>

sha(args) ::= <<
if ! echo "<args.hash> $SRC_NAME" | sha1sum -c - >/dev/null; then
return 1
fi
>>

sha1(args) ::= <<
if ! echo "<args.hash> $SRC_NAME" | sha1sum -c - >/dev/null; then
return 1
fi
>>

sha256(args) ::= <<
if ! echo "<args.hash> $SRC_NAME" | sha256sum -c - >/dev/null; then
return 1
fi
>>

wgetCmd(args, name, src) ::= <<
set -e && wget -nv -O "<name>" "<src>"
>>

curlCmd(args, name, src) ::= <<
set -e && curl "<src>"
>>

