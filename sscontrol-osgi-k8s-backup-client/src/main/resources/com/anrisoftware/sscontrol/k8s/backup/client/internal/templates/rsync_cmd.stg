/*
 * Mandatory:
 *
 * vars.rsync.host
 * vars.rsync.user
 * vars.rsync.port
 * vars.rsync.key
 * vars.path
 * vars.dir
 *
 * Optional:
 *
 * vars.config
 * vars.proxy
 * vars.proxy.socket
 */
rsyncCmd(parent, vars) ::= <<
set -e

config=$(mktemp)
trap "{ rm -f $config; }" EXIT

cat \<\<EOF > $config
Host <vars.rsync.host>
Match User <vars.rsync.user>
Port <vars.rsync.port>
IdentityFile <vars.rsync.key>
<if(vars.proxy)>
<if(vars.proxy.socket)>ProxyCommand ssh -o ControlMaster=auto -o ControlPath=<vars.proxy.socket> <vars.proxy.user>@%h nc %h %p<endif>
<endif>
<vars.config>
EOF

mkdir -p "<vars.dir>"
cd "<vars.dir>"
rsync <sshCommand(parent, vars)> -r -v -z <vars.rsync.arguments> <vars.rsync.user>@<vars.rsync.host>:<vars.path>/\* .

>>

sshCommand(parent, vars) ::= <%
-e "ssh -o StrictHostKeyChecking=no -F $config"
%>
