setupKubectl(parent, vars) ::= <<
<setCluster(parent, vars)>
<setCredentials(parent, vars)>
<setContext(parent, vars)>
<parent.kubectlCmd> config use-context default-system

>>

setCluster(parent, vars) ::= <<
<parent.kubectlCmd> config set-cluster default-cluster --server="<clusterServer(parent, vars);separator=",">" <kubeCa(parent, vars)>

>>

setCredentials(parent, vars) ::= <<
<parent.kubectlCmd> config set-credentials default-admin <kubeCa(parent, vars)> <kubeCert(parent, vars)> <kubeKey(parent, vars)>

>>

setContext(parent, vars) ::= <<
<parent.kubectlCmd> config set-context default-system --cluster=default-cluster --user=default-admin

>>

kubeCa(parent, vars) ::= <%
<if(vars.tls)><if(vars.tls.ca)>--certificate-authority=<vars.certsDir>/<vars.tls.caName><endif><endif>
%>

kubeCert(parent, vars) ::= <%
<if(vars.tls)><if(vars.tls.cert)>--client-certificate=<vars.certsDir>/<vars.tls.certName><endif><endif>
%>

kubeKey(parent, vars) ::= <%
<if(vars.tls)><if(vars.tls.key)>--client-key=<parent.certsDir>/<vars.tls.keyName><endif><endif>
%>

kubectlCmd(parent, vars) ::= <<
<setupKubectl(parent, vars)>
<parent.kubectlCmd> <vars.args>

>>

clusterServer(parent, vars) ::= <%
<vars.cluster.proto>://<vars.cluster.host>:<vars.cluster.port>
%>
